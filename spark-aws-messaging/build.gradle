plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.fabiogouw'
archivesBaseName = 'spark-aws-messaging'
version = '1.1.0'

repositories {
    mavenCentral()
}

compileJava {
    options.release = 8 // Spark targets Java 8
}

sonar {
    properties {
        property "sonar.projectKey", "fabiogouw_spark-aws-messaging"
        property "sonar.organization", "fabiogouw"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

dependencies {
    implementation group: 'org.apache.spark', name: 'spark-core_2.12', version: '3.1.3'
    compileOnly group: 'org.apache.spark', name: 'spark-sql_2.12', version: '3.1.3'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.13')
    implementation 'com.amazonaws:aws-java-sdk-sqs'

    testImplementation group: 'org.netbeans.external', name: 'org-apache-commons-lang3', version: 'RELEASE130'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:localstack:1.19.3'
    testImplementation group: 'org.apache.spark', name: 'spark-catalyst_2.12', version: '3.1.3'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '5.2.0'
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.register('copyToLib', Copy) {
    into "${buildDir}/libs/deps"
    from configurations.runtimeClasspath
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn(test)
}

test {
    useJUnitPlatform()
    dependsOn(copyToLib)
    finalizedBy(jacocoTestReport)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Spark AWS Messaging providers'
                description = 'A custom sink provider for Apache Spark that sends the content of a dataframe to an AWS SQS'
                url = 'https://github.com/fabiogouw/spark-aws-messaging'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'fabiogouw'
                        name = 'Fabio Gouw'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/fabiogouw/spark-aws-messaging.git'
                    developerConnection = 'scm:git:git@github.com:fabiogouw/spark-aws-messaging.git'
                    url = 'https://github.com/fabiogouw/spark-aws-messaging'
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username = "$ossrhUsername"
                password = "$ossrhPassword"
            }

            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}